// <auto-generated />
using System;
using KlonPKP_CodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KlonPKP_CodeFirst.Migrations
{
    [DbContext(typeof(KlonPKPContext))]
    partial class KlonPKPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Bilet", b =>
                {
                    b.Property<int>("Nr_Biletu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Nr_Biletu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Nr_Biletu"));

                    b.Property<TimeSpan>("Czas_podrozy")
                        .HasColumnType("time");

                    b.Property<DateTime>("Data_podrozy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Data_zakupu")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kurs")
                        .HasColumnType("int");

                    b.Property<int?>("KursID_Kursu")
                        .HasColumnType("int");

                    b.Property<int>("Miejsce")
                        .HasColumnType("int");

                    b.Property<int>("Naleznosc")
                        .HasColumnType("int");

                    b.Property<int>("Pasazer")
                        .HasColumnType("int");

                    b.Property<int?>("PasazerID_Pasazera")
                        .HasColumnType("int");

                    b.Property<int?>("PrzystankiID_Przystanku")
                        .HasColumnType("int");

                    b.Property<bool>("Sprawdzony")
                        .HasColumnType("bit");

                    b.Property<int>("Stacja_Koncowa")
                        .HasColumnType("int");

                    b.Property<int>("Stacja_Poczatkowa")
                        .HasColumnType("int");

                    b.Property<string>("Typ_Wagonu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Wagon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WagonKod_Wagonu")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Znizka")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ZnizkaNazwa")
                        .HasColumnType("varchar(40)");

                    b.HasKey("Nr_Biletu")
                        .HasName("PK__Bilet__Nr_Biletu");

                    b.HasIndex("KursID_Kursu");

                    b.HasIndex("PasazerID_Pasazera");

                    b.HasIndex("PrzystankiID_Przystanku");

                    b.HasIndex("WagonKod_Wagonu");

                    b.HasIndex("ZnizkaNazwa");

                    b.ToTable("Bilety");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Kurs", b =>
                {
                    b.Property<int>("ID_Kursu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Kursu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Kursu"));

                    b.Property<TimeSpan>("Czas_Podrozy")
                        .HasColumnType("time");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Pociag")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusID_Statusu")
                        .HasColumnType("int");

                    b.HasKey("ID_Kursu")
                        .HasName("PK__Kurs__ID_Kursu");

                    b.HasIndex("StatusID_Statusu");

                    b.ToTable("Kursy");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Pasazer", b =>
                {
                    b.Property<int>("ID_Pasazera")
                        .HasColumnType("int")
                        .HasColumnName("ID_Pasażera");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Kod_Pocztowy")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("Kod_pocztowy");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Miasto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short>("Nr_Domu")
                        .HasColumnType("smallint")
                        .HasColumnName("Nr_Domu");

                    b.Property<short?>("Nr_Mieszkania")
                        .HasColumnType("smallint")
                        .HasColumnName("Nr_Mieszkania");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<byte>("Wiek")
                        .HasColumnType("tinyint");

                    b.HasKey("ID_Pasazera")
                        .HasName("PK__Pasażer__ID_Pasażera");

                    b.ToTable("Pasazerowie");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Pociag", b =>
                {
                    b.Property<string>("Kod_Pociagu")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Kategoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Przewoznik")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PrzewoznikNazwa")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Kod_Pociagu")
                        .HasName("PK__Pociag__Kod_Pociagu");

                    b.HasIndex("PrzewoznikNazwa");

                    b.ToTable("Pociagi");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Przewoznik", b =>
                {
                    b.Property<string>("Nazwa")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Nazwa")
                        .HasName("PK__Przewoznik__Nazwa");

                    b.ToTable("Przewoznicy");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Przystanki", b =>
                {
                    b.Property<int>("ID_Przystanku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Przystanku");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Przystanku"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<TimeSpan>("Odjazd")
                        .HasColumnType("time");

                    b.Property<int>("Peron")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Przyjazd")
                        .HasColumnType("time");

                    b.Property<int>("Tor")
                        .HasColumnType("int");

                    b.HasKey("ID_Przystanku")
                        .HasName("PK__Przystanki__ID_Przystanku");

                    b.ToTable("Przystanki");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Przystanki_Pociagu", b =>
                {
                    b.Property<int>("ID_Przystanku")
                        .HasColumnType("int")
                        .HasColumnName("ID_Przystanku");

                    b.Property<string>("Kod_Pociagu")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<TimeSpan>("Odjazd")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Przyjazd")
                        .HasColumnType("time");

                    b.HasKey("ID_Przystanku", "Kod_Pociagu")
                        .HasName("PK_Przystanki_Pociagu");

                    b.HasIndex("Kod_Pociagu");

                    b.ToTable("Przystanki_Pociagu");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Status", b =>
                {
                    b.Property<int>("ID_Statusu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Statusu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Statusu"));

                    b.Property<string>("Nastepny_Przystanek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Opóźnienie")
                        .HasColumnType("time");

                    b.Property<string>("Poprzedni_Przystanek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrzystankiID_Przystanku")
                        .HasColumnType("int");

                    b.Property<bool>("Ukonczony")
                        .HasColumnType("bit");

                    b.HasKey("ID_Statusu")
                        .HasName("PK__Status__ID_Statusu");

                    b.HasIndex("PrzystankiID_Przystanku");

                    b.ToTable("Statusy");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.TypWagonu", b =>
                {
                    b.Property<string>("Nazwa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Nazwa")
                        .HasName("PK__TypWagonu__Nazwa");

                    b.ToTable("TypWagonu");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Wagon", b =>
                {
                    b.Property<string>("Kod_Wagonu")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Ilosc_Miejsc")
                        .HasColumnType("int");

                    b.Property<string>("Kod_Pociagu")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("Nr_Wagonu")
                        .HasColumnType("int");

                    b.Property<string>("Pociag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PociagKod_Pociagu")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("TypWagonu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypWagonuNazwa")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Typ_Wagonu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Kod_Wagonu")
                        .HasName("PK__Wagon__Kod_Wagonu");

                    b.HasIndex("PociagKod_Pociagu");

                    b.HasIndex("TypWagonuNazwa");

                    b.ToTable("Wagony");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Znizka", b =>
                {
                    b.Property<string>("Nazwa")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Wartosc")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Nazwa")
                        .HasName("PK__Znizka__Nazwa");

                    b.ToTable("Znizki");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Bilet", b =>
                {
                    b.HasOne("KlonPKP_CodeFirst.Models.Kurs", null)
                        .WithMany("Bilety")
                        .HasForeignKey("KursID_Kursu");

                    b.HasOne("KlonPKP_CodeFirst.Models.Pasazer", null)
                        .WithMany("Bilety")
                        .HasForeignKey("PasazerID_Pasazera");

                    b.HasOne("KlonPKP_CodeFirst.Models.Przystanki", null)
                        .WithMany("Bilety")
                        .HasForeignKey("PrzystankiID_Przystanku");

                    b.HasOne("KlonPKP_CodeFirst.Models.Wagon", null)
                        .WithMany("Bilety")
                        .HasForeignKey("WagonKod_Wagonu");

                    b.HasOne("KlonPKP_CodeFirst.Models.Znizka", null)
                        .WithMany("Bilety")
                        .HasForeignKey("ZnizkaNazwa");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Kurs", b =>
                {
                    b.HasOne("KlonPKP_CodeFirst.Models.Status", null)
                        .WithMany("Kursy")
                        .HasForeignKey("StatusID_Statusu");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Pociag", b =>
                {
                    b.HasOne("KlonPKP_CodeFirst.Models.Przewoznik", null)
                        .WithMany("Pociagi")
                        .HasForeignKey("PrzewoznikNazwa");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Przystanki_Pociagu", b =>
                {
                    b.HasOne("KlonPKP_CodeFirst.Models.Przystanki", "Przystanki")
                        .WithMany("Trasy")
                        .HasForeignKey("ID_Przystanku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KlonPKP_CodeFirst.Models.Pociag", "Pociag")
                        .WithMany("Trasy")
                        .HasForeignKey("Kod_Pociagu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pociag");

                    b.Navigation("Przystanki");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Status", b =>
                {
                    b.HasOne("KlonPKP_CodeFirst.Models.Przystanki", null)
                        .WithMany("Statusy")
                        .HasForeignKey("PrzystankiID_Przystanku");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Wagon", b =>
                {
                    b.HasOne("KlonPKP_CodeFirst.Models.Pociag", null)
                        .WithMany("Wagony")
                        .HasForeignKey("PociagKod_Pociagu");

                    b.HasOne("KlonPKP_CodeFirst.Models.TypWagonu", null)
                        .WithMany("Wagony")
                        .HasForeignKey("TypWagonuNazwa");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Kurs", b =>
                {
                    b.Navigation("Bilety");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Pasazer", b =>
                {
                    b.Navigation("Bilety");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Pociag", b =>
                {
                    b.Navigation("Trasy");

                    b.Navigation("Wagony");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Przewoznik", b =>
                {
                    b.Navigation("Pociagi");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Przystanki", b =>
                {
                    b.Navigation("Bilety");

                    b.Navigation("Statusy");

                    b.Navigation("Trasy");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Status", b =>
                {
                    b.Navigation("Kursy");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.TypWagonu", b =>
                {
                    b.Navigation("Wagony");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Wagon", b =>
                {
                    b.Navigation("Bilety");
                });

            modelBuilder.Entity("KlonPKP_CodeFirst.Models.Znizka", b =>
                {
                    b.Navigation("Bilety");
                });
#pragma warning restore 612, 618
        }
    }
}
